#!/bin/env sh

# lowers screen brightness, then waits to be killed
# and restores previous brightness on exit.

## CONFIGURATION ##############################################################

# Brightness will be lowered to this value.
min_brightness=0

# If you have a driver without RandR backlight property (e.g. radeon), set this
# to use the sysfs interface and create a .conf file in /etc/tmpfiles.d/
# containing the following line to make the sysfs file writable for group
# "users":
#
#     m /sys/class/backlight/acpi_video0/brightness 0664 root users - -
#
#sysfs_path=/sys/class/backlight/acpi_video0/brightness

# Time to sleep (in seconds) between increments when using sysfs. If unset or
# empty, fading is disabled.
fade_step_time=0.05

###############################################################################

get_brightness() {
    if [ -z "$sysfs_path" ]; then
        light -O
        light -G | cut -d'.' -f1
    else
        cat "$sysfs_path"
    fi
}

set_brightness() {
    if [ -z "$sysfs_path" ]; then
        light -S $1
    else
        echo $1 > "$sysfs_path"
    fi
}

fade_brightness() {
    if [ -z $fade_step_time ]; then
        set_brightness $1
    else
        : "$((level = $(get_brightness)))"
        while [ "$((level != $1))" -ne 0 ]; do
            set_brightness $level
            : "$((level = level - 1))"
            sleep $fade_step_time
        done
    fi
}

trap 'exit 0' TERM INT
trap "light -I; kill %%" EXIT
fade_brightness $min_brightness
sleep 2147483647 &
wait
